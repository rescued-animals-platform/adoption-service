# Java Gradle CircleCI 2.0 configuration file
version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      - persist_to_workspace:
          root: ~/repo
          paths:
            - src
            - migrations
            - Makefile
            - gradle
            - build.gradle
            - settings.gradle
            - gradlew
            - gradlew.bat

      - run:
          name: Install make
          command: |
            sudo apt-get update
            sudo apt-get install -y make
          when: always

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          - v1-dependencies-

      - run: ./gradlew dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      - run: make build-project

      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/test/.*xml" -exec cp {} ~/junit/ \;
          when: always

      - store_test_results:
          path: ~/junit

      - store_artifacts:
          path: ~/junit

      - store_artifacts:
          path: build/libs/adoption-service-1.0-SNAPSHOT.jar

  pitest:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - run:
          name: Install make
          command: |
            sudo apt-get update
            sudo apt-get install -y make
          when: always

      - attach_workspace:
          at: ~/repo

      - run: make pitest

      - store_artifacts:
          path: build/reports/pitest

  integration-test:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - run:
          name: Install make
          command: |
            sudo apt-get update
            sudo apt-get install -y make
          when: always

      - setup_remote_docker:
          docker_layer_caching: true

      - attach_workspace:
          at: ~/repo

      - run: make integration-test

      - run:
          name: Save test results
          command: |
            mkdir -p ~/junitint/
            find . -type f -regex ".*/build/test-results/integrationTest/.*xml" -exec cp {} ~/junitint/ \;
          when: always

      - store_test_results:
          path: ~/junitint

      - store_artifacts:
          path: ~/junitint

workflows:
  version: 2
  adoption-service:
    jobs:
      - build
      - pitest:
          requires:
            - build
          filters:
            branches:
              only: master
      - integration-test:
          requires:
            - build
            - pitest
          filters:
            branches:
              only: master