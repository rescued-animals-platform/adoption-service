version: 2.1

####################
# Orbs
####################

orbs:
  heroku: circleci/heroku@1.0.1

####################
# Executors
####################

executors:
  docker-publisher:
    environment:
      IMAGE_NAME: emmeblm/adoption-service
    docker:
      - image: circleci/buildpack-deps:stretch
    working_directory: ~/repo

  code-builder:
    docker:
      - image: circleci/openjdk:11-jdk
    working_directory: ~/repo

  integration-tester:
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    docker:
      - image: circleci/openjdk:11-jdk
    working_directory: ~/repo

####################
# Jobs
####################

jobs:
  build:
    executor: code-builder

    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "build.gradle" }}
            - v2-dependencies-

      - run: ./gradlew dependencies

      - run: ./gradlew cleanTest test --rerun-tasks

      - run: ./gradlew bootJar --rerun-tasks

      - save_cache:
          paths:
            - ~/.gradle
          key: v2-dependencies-{{ checksum "build.gradle" }}

      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit
            find . -type f -regex ".*/build/test-results/test/.*xml" -exec cp {} ~/junit \;
          when: always

      - store_test_results:
          path: ~/junit

      - store_artifacts:
          path: ~/junit

      - persist_to_workspace:
          root: ~/repo
          paths:
            - src
            - migrations
            - terraform
            - pmd
            - scripts
            - docker
            - gradle
            - build.gradle
            - settings.gradle
            - gradlew
            - gradlew.bat
            - Dockerfile
            - docker-compose.yaml
            - Makefile
            - Procfile
            - system.properties
            - .git

  pitest:
    executor: code-builder

    steps:
      - attach_workspace:
          at: ~/repo

      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "build.gradle" }}
            - v2-dependencies-

      - run: ./gradlew clean pitest

      - save_cache:
          paths:
            - ~/.gradle
          key: v2-dependencies-{{ checksum "build.gradle" }}

      - store_artifacts:
          path: build/reports/pitest

  style-check:
    executor: code-builder

    steps:
      - attach_workspace:
          at: ~/repo

      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "build.gradle" }}
            - v2-dependencies-

      - run: make style-check

      - save_cache:
          paths:
            - ~/.gradle
          key: v2-dependencies-{{ checksum "build.gradle" }}

      - store_artifacts:
          path: build/reports/pmd

      - store_artifacts:
          path: build/reports/spotbugs

  integration-test:
    executor: integration-tester

    steps:
      - attach_workspace:
          at: ~/repo

      - setup_remote_docker

      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "build.gradle" }}
            - v2-dependencies-

      - run:
          name: Running integration tests
          command: make integration-test

      - save_cache:
          paths:
            - ~/.gradle
          key: v2-dependencies-{{ checksum "build.gradle" }}

      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit
            find . -type f -regex ".*/build/test-results/integrationTest/.*xml" -exec cp {} ~/junit \;
          when: always

      - store_test_results:
          path: ~/junit

      - store_artifacts:
          path: ~/junit

  api-test:
    executor: integration-tester

    steps:
      - attach_workspace:
          at: ~/repo

      - setup_remote_docker

      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "build.gradle" }}
            - v2-dependencies-

      - run:
          name: Running api tests
          command: make api-test

      - save_cache:
          paths:
            - ~/.gradle
          key: v2-dependencies-{{ checksum "build.gradle" }}

      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit
            find . -type f -regex ".*/build/test-results/apiTest/.*xml" -exec cp {} ~/junit \;
          when: always

      - store_test_results:
          path: ~/junit

      - store_artifacts:
          path: ~/junit

  deploy-uat:
    executor: heroku/default

    working_directory: ~/repo

    steps:
      - attach_workspace:
          at: ~/repo

      - heroku/deploy-via-git:
          app-name: servicio-adopciones-uat

  uat-integration-test:
    executor: integration-tester

    steps:
      - attach_workspace:
          at: ~/repo

      - setup_remote_docker

      - heroku/install

      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "build.gradle" }}
            - v2-dependencies-

      - run:
          name: Running integration tests in ci environment
          command: |
            export CLOUDINARY_URL=$(heroku config:get CLOUDINARY_URL -a servicio-adopciones-uat)
            export SPRING_DATASOURCE_URL=$(heroku run -a servicio-adopciones-uat echo \$SPRING_DATASOURCE_URL)
            export SPRING_DATASOURCE_USERNAME=$(heroku run -a servicio-adopciones-uat echo \$SPRING_DATASOURCE_USERNAME)
            export SPRING_DATASOURCE_PASSWORD=$(heroku run -a servicio-adopciones-uat echo \$SPRING_DATASOURCE_PASSWORD)
            docker-compose build --build-arg arg_spring_profile=live --build-arg arg_adoption_service_url=https://servicio-adopciones-uat.herokuapp.com/ adoption-service-builder
            docker-compose run -e ADMIN_JWT=${ADMIN_JWT} -e CLOUDINARY_URL=${CLOUDINARY_URL} \
              -e SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL} -e SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME} \
              -e SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD} adoption-service-builder gradle integrationTest

      - save_cache:
          paths:
            - ~/.gradle
          key: v2-dependencies-{{ checksum "build.gradle" }}

      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit
            find . -type f -regex ".*/build/test-results/integrationTest/.*xml" -exec cp {} ~/junit \;
          when: always

      - store_test_results:
          path: ~/junit

      - store_artifacts:
          path: ~/junit

####################
# Workflows
####################

workflows:
  version: 2
  adoption-service-pipeline:
    jobs:
      - build:
          filters:
            branches:
              only: master
      - pitest:
          requires:
            - build
          filters:
            branches:
              only: master
      - style-check:
          requires:
            - build
          filters:
            branches:
              only: master
      - integration-test:
          requires:
            - build
          filters:
            branches:
              only: master
      - api-test:
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy-uat:
          requires:
            - pitest
            - style-check
            - integration-test
            - api-test
          filters:
            branches:
              only: master
      - uat-integration-test:
          requires:
            - deploy-uat
          filters:
            branches:
              only: master