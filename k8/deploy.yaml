apiVersion: apps/v1
kind: Deployment
metadata:
  name: adoption-service-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: adoption-service
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: adoption-service
    spec:
      containers:
        - name: adoption-service
          image: emmeblm/adoption-service:latest
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: "500m"
              memory: "1Gi"
            requests:
              cpu: "100m"
              memory: "512Mi"
          env:
            - name: SPRING_PROFILE
              value: ci
            # TODO: Make DB_HOST dynamic
            - name: DB_HOST
              value: 127.0.0.1:5432/animal-adoption-db-ci
            - name: CI_ANIMAL_PICTURES_BUCKET
              valueFrom:
                secretKeyRef:
                  name: adoption-service-secrets
                  key: animal-pictures-storage-bucket
            - name: CI_SQL_CLOUD_MASTER_USERNAME
              valueFrom:
                secretKeyRef:
                  name: adoption-service-secrets
                  key: sql-cloud-master-username
            - name: CI_SQL_CLOUD_MASTER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: adoption-service-secrets
                  key: sql-cloud-master-password
        - name: cloudsql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.14
          resources:
            limits:
              cpu: "500m"
              memory: "1Gi"
            requests:
              cpu: "100m"
              memory: "512Mi"
          env:
            - name: DB_CONNECTION_NAME
              valueFrom:
                secretKeyRef:
                  name: adoption-service-secrets
                  key: db-connection-name
          command: ["/cloud_sql_proxy",
                    "-instances=$(DB_CONNECTION_NAME)=tcp:5432",
                    "-credential_file=/secrets/cloudsql/credentials.json"]
          securityContext:
            runAsUser: 2  # non-root user
            allowPrivilegeEscalation: false
          volumeMounts:
            - name: cloudsql-instance-credentials
              mountPath: /secrets/cloudsql
              readOnly: true
      volumes:
        - name: cloudsql-instance-credentials
          secret:
            secretName: cloudsql-instance-credentials
